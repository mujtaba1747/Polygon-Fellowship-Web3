{
  "contractName": "Vault",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StableCoinToken",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract PriceConsumerV3",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDeposited",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountMinted",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBurned",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract StableCoinToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountToDeposit",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateralAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "debtAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IVault.Vault",
          "name": "vault",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "repaymentAmount",
          "type": "uint256"
        }
      ],
      "name": "estimateCollateralAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "estimateTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getEthUSDPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "name": "setOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StableCoinToken\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract PriceConsumerV3\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBurned\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToDeposit\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repaymentAmount\",\"type\":\"uint256\"}],\"name\":\"estimateCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"estimateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthUSDPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getVault\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"debtAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IVault.Vault\",\"name\":\"vault\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract StableCoinToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repaymentAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(uint256)\":{\"params\":{\"amountToDeposit\":\"The amount of ether the user sent in the transaction\"}},\"estimateCollateralAmount(uint256)\":{\"params\":{\"repaymentAmount\":\"the amount of stable coin that would be repaid\"},\"returns\":{\"collateralAmount\":\"the estimated amount of a vault's collateral that would be returned \"}},\"estimateTokenAmount(uint256)\":{\"params\":{\"depositAmount\":\"the amount of ETH that would be deposited\"},\"returns\":{\"tokenAmount\":\" the estimated amount of stablecoin that would be minted\"}},\"getVault(address)\":{\"params\":{\"userAddress\":\"the address of the vault owner\"},\"returns\":{\"vault\":\" the vault details\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"This cannot allow a user to withdraw more than they put in\",\"params\":{\"repaymentAmount\":\"the amount of stablecoin that a user is repaying to redeem their collateral for.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(uint256)\":{\"notice\":\"Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\"},\"estimateCollateralAmount(uint256)\":{\"notice\":\"Returns an estimate of how much collateral could be withdrawn for a given amount of stablecoin\"},\"estimateTokenAmount(uint256)\":{\"notice\":\"Returns an estimate on how much stable coin could be minted at the current rate\"},\"getVault(address)\":{\"notice\":\"Returns the details of a vault\"},\"withdraw(uint256)\":{\"notice\":\"Allows a user to withdraw up to 100% of the collateral they have on deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/implementations/Vault.sol\":\"Vault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"project:/contracts/implementations/Coin.sol\":{\"keccak256\":\"0xf981f66b420d30da1053ef39fb38d68fe22d406916bf262fc84e9ec743780659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14c0aa2ac39b3464e56e9a0a79ecd8b5987f309635c902cf0896fbb1bb02ca7f\",\"dweb:/ipfs/QmZRsiBAEyyP3gg9YxDJJ655Y4xuR4PxDM213ndA2HfQ74\"]},\"project:/contracts/implementations/PriceConsumerV3.sol\":{\"keccak256\":\"0xf009a0190a249c6d8a41ac3763a20c12aaa8d5d09eaa54151f5104bd0dc10cb4\",\"urls\":[\"bzz-raw://83aa0a8d4de9d1e4c9e0008d95ae1a0e99daa2714e9969a9141ae539cef8ab2a\",\"dweb:/ipfs/QmTbW8Mec2tBAt1hez7yXBNmihnZLtijhehPYtmXswX1FN\"]},\"project:/contracts/implementations/Vault.sol\":{\"keccak256\":\"0x5370b65dd08a5910467a47c4894e0177bdd00cb56f6398872fec20cad75d7ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://684db09b187c2b889d46add792dcab42ba6a5ce4dca0513528c784ab5abc6982\",\"dweb:/ipfs/QmVHRDnH3gNnTPGPE7YR4zU34yYvXeigygRj8tWpVVChZE\"]},\"project:/contracts/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x6d04595d5f68f36186be58f14a5a20c6cafaf49ca329136af1e9f467a62bebe5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10912e3975941d5ae36a86f9a1b7991f53532cb487aa3072595a6dedf4f52fe7\",\"dweb:/ipfs/QmSacBj3Nyhkp5UH4NQCHd9ACcTJKA6eWG97BQaebpQwCz\"]},\"project:/contracts/interfaces/ICoin.sol\":{\"keccak256\":\"0x658820fb291fd23361c46a20143eb3fa70221291c727fc692933f1bbe12c8610\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74368e4076d783b5bfc130f210188729e6cfb6228e883d12f9b9d9d32bc49380\",\"dweb:/ipfs/QmS1LiWYWfiADZSpxcU1PGm4rPKgZuVSZshad5juVoX2AE\"]},\"project:/contracts/interfaces/IVault.sol\":{\"keccak256\":\"0x026336f1a4e95d32f8072d1611b23cd473369e1d940204f486945cdf93a1bd9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff5091c4b8dce36727cf55db50b2927f6f8bd6c15a4ef287e1d2535d62160b66\",\"dweb:/ipfs/Qmagh8qkz39zG8Ha23P3dWm4MgsdWehSVHD1x2Rra9eDsM\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620016e2380380620016e2833981810160405281019062000037919062000270565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002b7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b6000620001f382620001d2565b9050919050565b6200020581620001e6565b81146200021157600080fd5b50565b6000815190506200022581620001fa565b92915050565b60006200023882620001d2565b9050919050565b6200024a816200022b565b81146200025657600080fd5b50565b6000815190506200026a816200023f565b92915050565b600080604083850312156200028a5762000289620001ad565b5b60006200029a8582860162000214565b9250506020620002ad8582860162000259565b9150509250929050565b61141b80620002c76000396000f3fe6080604052600436106100c25760003560e01c80637adbf9731161007f578063b6b55f2511610059578063b6b55f2514610268578063d84549d714610284578063f2fde38b146102af578063fc0c546a146102d8576100c2565b80637adbf973146101e9578063833b1fce146102125780638da5cb5b1461023d576100c2565b80630eb9af38146100c75780631b05ab791461010457806321df0da7146101415780632e1a7d4d1461016c57806356bfdaf514610195578063715018a6146101d2575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610d78565b610303565b6040516100fb9190610ded565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190610e34565b610370565b6040516101389190610e70565b60405180910390f35b34801561014d57600080fd5b5061015661038c565b6040516101639190610e9a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610e34565b6103b6565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e34565b610707565b6040516101c99190610e70565b60405180910390f35b3480156101de57600080fd5b506101e7610723565b005b3480156101f557600080fd5b50610210600480360381019061020b9190610d78565b6107ab565b005b34801561021e57600080fd5b5061022761086b565b6040516102349190610e9a565b60405180910390f35b34801561024957600080fd5b50610252610895565b60405161025f9190610e9a565b60405180910390f35b610282600480360381019061027d9190610e34565b6108be565b005b34801561029057600080fd5b50610299610a65565b6040516102a69190610e70565b60405180910390f35b3480156102bb57600080fd5b506102d660048036038101906102d19190610d78565b610b12565b005b3480156102e457600080fd5b506102ed610c09565b6040516102fa9190610f14565b60405180910390f35b61030b610cfb565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b600061037a610a65565b826103859190610f5e565b9050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015481111561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290611015565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104979190610e9a565b602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d8919061104a565b1015610519576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610510906110c3565b60405180910390fd5b6000610523610a65565b8261052e9190611112565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161058d929190611143565b6020604051808303816000875af11580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906111a4565b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461062391906111d1565b9250508190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461067c91906111d1565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106c9573d6000803e3d6000fd5b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c881836040516106fb929190611205565b60405180910390a15050565b6000610711610a65565b8261071c9190611112565b9050919050565b61072b610c2f565b73ffffffffffffffffffffffffffffffffffffffff16610749610895565b73ffffffffffffffffffffffffffffffffffffffff161461079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061127a565b60405180910390fd5b6107a96000610c37565b565b6107b3610c2f565b73ffffffffffffffffffffffffffffffffffffffff166107d1610895565b73ffffffffffffffffffffffffffffffffffffffff1614610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e9061127a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006108c8610a65565b826108d39190610f5e565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610932929190611143565b6020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097591906111a4565b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109c8919061129a565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610a21919061129a565b925050819055507fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c558282604051610a59929190611205565b60405180910390a15050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190611326565b90506402540be40081610b0c9190610f5e565b91505090565b610b1a610c2f565b73ffffffffffffffffffffffffffffffffffffffff16610b38610895565b73ffffffffffffffffffffffffffffffffffffffff1614610b8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b859061127a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906113c5565b60405180910390fd5b610c0681610c37565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4582610d1a565b9050919050565b610d5581610d3a565b8114610d6057600080fd5b50565b600081359050610d7281610d4c565b92915050565b600060208284031215610d8e57610d8d610d15565b5b6000610d9c84828501610d63565b91505092915050565b6000819050919050565b610db881610da5565b82525050565b604082016000820151610dd46000850182610daf565b506020820151610de76020850182610daf565b50505050565b6000604082019050610e026000830184610dbe565b92915050565b610e1181610da5565b8114610e1c57600080fd5b50565b600081359050610e2e81610e08565b92915050565b600060208284031215610e4a57610e49610d15565b5b6000610e5884828501610e1f565b91505092915050565b610e6a81610da5565b82525050565b6000602082019050610e856000830184610e61565b92915050565b610e9481610d3a565b82525050565b6000602082019050610eaf6000830184610e8b565b92915050565b6000819050919050565b6000610eda610ed5610ed084610d1a565b610eb5565b610d1a565b9050919050565b6000610eec82610ebf565b9050919050565b6000610efe82610ee1565b9050919050565b610f0e81610ef3565b82525050565b6000602082019050610f296000830184610f05565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6982610da5565b9150610f7483610da5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fad57610fac610f2f565b5b828202905092915050565b600082825260208201905092915050565b7f7769746864726177206c696d6974206578636565646564000000000000000000600082015250565b6000610fff601783610fb8565b915061100a82610fc9565b602082019050919050565b6000602082019050818103600083015261102e81610ff2565b9050919050565b60008151905061104481610e08565b92915050565b6000602082840312156110605761105f610d15565b5b600061106e84828501611035565b91505092915050565b7f6e6f7420656e6f75676820746f6b656e7320696e2062616c616e636500000000600082015250565b60006110ad601c83610fb8565b91506110b882611077565b602082019050919050565b600060208201905081810360008301526110dc816110a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061111d82610da5565b915061112883610da5565b925082611138576111376110e3565b5b828204905092915050565b60006040820190506111586000830185610e8b565b6111656020830184610e61565b9392505050565b60008115159050919050565b6111818161116c565b811461118c57600080fd5b50565b60008151905061119e81611178565b92915050565b6000602082840312156111ba576111b9610d15565b5b60006111c88482850161118f565b91505092915050565b60006111dc82610da5565b91506111e783610da5565b9250828210156111fa576111f9610f2f565b5b828203905092915050565b600060408201905061121a6000830185610e61565b6112276020830184610e61565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611264602083610fb8565b915061126f8261122e565b602082019050919050565b6000602082019050818103600083015261129381611257565b9050919050565b60006112a582610da5565b91506112b083610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112e5576112e4610f2f565b5b828201905092915050565b6000819050919050565b611303816112f0565b811461130e57600080fd5b50565b600081519050611320816112fa565b92915050565b60006020828403121561133c5761133b610d15565b5b600061134a84828501611311565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113af602683610fb8565b91506113ba82611353565b604082019050919050565b600060208201905081810360008301526113de816113a2565b905091905056fea2646970667358221220514a10c369102552dc8d94bb7b34fa19258ed4a4226fa088b739ac02e437312c64736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80637adbf9731161007f578063b6b55f2511610059578063b6b55f2514610268578063d84549d714610284578063f2fde38b146102af578063fc0c546a146102d8576100c2565b80637adbf973146101e9578063833b1fce146102125780638da5cb5b1461023d576100c2565b80630eb9af38146100c75780631b05ab791461010457806321df0da7146101415780632e1a7d4d1461016c57806356bfdaf514610195578063715018a6146101d2575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190610d78565b610303565b6040516100fb9190610ded565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190610e34565b610370565b6040516101389190610e70565b60405180910390f35b34801561014d57600080fd5b5061015661038c565b6040516101639190610e9a565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610e34565b6103b6565b005b3480156101a157600080fd5b506101bc60048036038101906101b79190610e34565b610707565b6040516101c99190610e70565b60405180910390f35b3480156101de57600080fd5b506101e7610723565b005b3480156101f557600080fd5b50610210600480360381019061020b9190610d78565b6107ab565b005b34801561021e57600080fd5b5061022761086b565b6040516102349190610e9a565b60405180910390f35b34801561024957600080fd5b50610252610895565b60405161025f9190610e9a565b60405180910390f35b610282600480360381019061027d9190610e34565b6108be565b005b34801561029057600080fd5b50610299610a65565b6040516102a69190610e70565b60405180910390f35b3480156102bb57600080fd5b506102d660048036038101906102d19190610d78565b610b12565b005b3480156102e457600080fd5b506102ed610c09565b6040516102fa9190610f14565b60405180910390f35b61030b610cfb565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050919050565b600061037a610a65565b826103859190610f5e565b9050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015481111561043b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043290611015565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016104979190610e9a565b602060405180830381865afa1580156104b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d8919061104a565b1015610519576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610510906110c3565b60405180910390fd5b6000610523610a65565b8261052e9190611112565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33846040518363ffffffff1660e01b815260040161058d929190611143565b6020604051808303816000875af11580156105ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d091906111a4565b5080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461062391906111d1565b9250508190555081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461067c91906111d1565b925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156106c9573d6000803e3d6000fd5b507f56ca301a9219608c91e7bcee90e083c19671d2cdcc96752c7af291cee5f9c8c881836040516106fb929190611205565b60405180910390a15050565b6000610711610a65565b8261071c9190611112565b9050919050565b61072b610c2f565b73ffffffffffffffffffffffffffffffffffffffff16610749610895565b73ffffffffffffffffffffffffffffffffffffffff161461079f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107969061127a565b60405180910390fd5b6107a96000610c37565b565b6107b3610c2f565b73ffffffffffffffffffffffffffffffffffffffff166107d1610895565b73ffffffffffffffffffffffffffffffffffffffff1614610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e9061127a565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006108c8610a65565b826108d39190610f5e565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610932929190611143565b6020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097591906111a4565b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546109c8919061129a565b9250508190555080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610a21919061129a565b925050819055507fa3af609bf46297028ce551832669030f9effef2b02606d02cbbcc40fe6b47c558282604051610a59929190611205565b60405180910390a15050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af99190611326565b90506402540be40081610b0c9190610f5e565b91505090565b610b1a610c2f565b73ffffffffffffffffffffffffffffffffffffffff16610b38610895565b73ffffffffffffffffffffffffffffffffffffffff1614610b8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b859061127a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf4906113c5565b60405180910390fd5b610c0681610c37565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806040016040528060008152602001600081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d4582610d1a565b9050919050565b610d5581610d3a565b8114610d6057600080fd5b50565b600081359050610d7281610d4c565b92915050565b600060208284031215610d8e57610d8d610d15565b5b6000610d9c84828501610d63565b91505092915050565b6000819050919050565b610db881610da5565b82525050565b604082016000820151610dd46000850182610daf565b506020820151610de76020850182610daf565b50505050565b6000604082019050610e026000830184610dbe565b92915050565b610e1181610da5565b8114610e1c57600080fd5b50565b600081359050610e2e81610e08565b92915050565b600060208284031215610e4a57610e49610d15565b5b6000610e5884828501610e1f565b91505092915050565b610e6a81610da5565b82525050565b6000602082019050610e856000830184610e61565b92915050565b610e9481610d3a565b82525050565b6000602082019050610eaf6000830184610e8b565b92915050565b6000819050919050565b6000610eda610ed5610ed084610d1a565b610eb5565b610d1a565b9050919050565b6000610eec82610ebf565b9050919050565b6000610efe82610ee1565b9050919050565b610f0e81610ef3565b82525050565b6000602082019050610f296000830184610f05565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6982610da5565b9150610f7483610da5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fad57610fac610f2f565b5b828202905092915050565b600082825260208201905092915050565b7f7769746864726177206c696d6974206578636565646564000000000000000000600082015250565b6000610fff601783610fb8565b915061100a82610fc9565b602082019050919050565b6000602082019050818103600083015261102e81610ff2565b9050919050565b60008151905061104481610e08565b92915050565b6000602082840312156110605761105f610d15565b5b600061106e84828501611035565b91505092915050565b7f6e6f7420656e6f75676820746f6b656e7320696e2062616c616e636500000000600082015250565b60006110ad601c83610fb8565b91506110b882611077565b602082019050919050565b600060208201905081810360008301526110dc816110a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061111d82610da5565b915061112883610da5565b925082611138576111376110e3565b5b828204905092915050565b60006040820190506111586000830185610e8b565b6111656020830184610e61565b9392505050565b60008115159050919050565b6111818161116c565b811461118c57600080fd5b50565b60008151905061119e81611178565b92915050565b6000602082840312156111ba576111b9610d15565b5b60006111c88482850161118f565b91505092915050565b60006111dc82610da5565b91506111e783610da5565b9250828210156111fa576111f9610f2f565b5b828203905092915050565b600060408201905061121a6000830185610e61565b6112276020830184610e61565b9392505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611264602083610fb8565b915061126f8261122e565b602082019050919050565b6000602082019050818103600083015261129381611257565b9050919050565b60006112a582610da5565b91506112b083610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112e5576112e4610f2f565b5b828201905092915050565b6000819050919050565b611303816112f0565b811461130e57600080fd5b50565b600081519050611320816112fa565b92915050565b60006020828403121561133c5761133b610d15565b5b600061134a84828501611311565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006113af602683610fb8565b91506113ba82611353565b604082019050919050565b600060208201905081810360008301526113de816113a2565b905091905056fea2646970667358221220514a10c369102552dc8d94bb7b34fa19258ed4a4226fa088b739ac02e437312c64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2158:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:12",
                "type": ""
              }
            ],
            "src": "7:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:12",
                "type": ""
              }
            ],
            "src": "334:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:12",
                "type": ""
              }
            ],
            "src": "466:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "636:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "646:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "675:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "657:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "646:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_StableCoinToken_$871",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "618:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "628:7:12",
                "type": ""
              }
            ],
            "src": "568:119:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:102:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "839:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "848:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "851:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "841:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "841:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "841:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "782:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "830:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_StableCoinToken_$871",
                              "nodeType": "YulIdentifier",
                              "src": "789:40:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "789:47:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "779:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "779:58:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "772:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "772:66:12"
                  },
                  "nodeType": "YulIf",
                  "src": "769:86:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_StableCoinToken_$871",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "752:5:12",
                "type": ""
              }
            ],
            "src": "693:168:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "953:103:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "963:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "978:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "972:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "963:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1044:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_StableCoinToken_$871",
                      "nodeType": "YulIdentifier",
                      "src": "994:49:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "994:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "994:56:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_StableCoinToken_$871_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "931:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "939:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "947:5:12",
                "type": ""
              }
            ],
            "src": "867:189:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1130:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1140:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1169:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1151:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1151:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1140:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_PriceConsumerV3_$904",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1112:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1122:7:12",
                "type": ""
              }
            ],
            "src": "1062:119:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1253:102:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1333:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1342:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1345:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1335:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1335:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1276:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1324:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_PriceConsumerV3_$904",
                              "nodeType": "YulIdentifier",
                              "src": "1283:40:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1283:47:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1273:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:58:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1266:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:66:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1263:86:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_PriceConsumerV3_$904",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1246:5:12",
                "type": ""
              }
            ],
            "src": "1187:168:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:103:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1457:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1472:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1466:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1538:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_PriceConsumerV3_$904",
                      "nodeType": "YulIdentifier",
                      "src": "1488:49:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1488:56:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1488:56:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_PriceConsumerV3_$904_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1425:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1433:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1441:5:12",
                "type": ""
              }
            ],
            "src": "1361:189:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1696:459:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1742:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1744:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1744:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1744:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1717:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1726:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1713:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1713:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1738:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1709:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1709:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1706:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1835:151:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1850:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1854:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1879:97:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1948:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1959:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1944:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1944:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1968:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_StableCoinToken_$871_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1889:54:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1889:87:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1879:6:12"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1996:152:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2011:16:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2025:2:12",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2015:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2041:97:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2110:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2121:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2106:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2106:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2130:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_PriceConsumerV3_$904_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2051:54:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2051:87:12"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2041:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_StableCoinToken_$871t_contract$_PriceConsumerV3_$904_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1658:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1669:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1681:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1689:6:12",
                "type": ""
              }
            ],
            "src": "1556:599:12"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_StableCoinToken_$871(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_StableCoinToken_$871(value) {\n        if iszero(eq(value, cleanup_t_contract$_StableCoinToken_$871(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_StableCoinToken_$871_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_StableCoinToken_$871(value)\n    }\n\n    function cleanup_t_contract$_PriceConsumerV3_$904(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_PriceConsumerV3_$904(value) {\n        if iszero(eq(value, cleanup_t_contract$_PriceConsumerV3_$904(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_PriceConsumerV3_$904_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_PriceConsumerV3_$904(value)\n    }\n\n    function abi_decode_tuple_t_contract$_StableCoinToken_$871t_contract$_PriceConsumerV3_$904_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_StableCoinToken_$871_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_PriceConsumerV3_$904_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12711:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:12",
                "type": ""
              }
            ],
            "src": "7:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:12",
                "type": ""
              }
            ],
            "src": "334:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:12",
                "type": ""
              }
            ],
            "src": "466:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:12",
                "type": ""
              }
            ],
            "src": "568:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:12",
                "type": ""
              }
            ],
            "src": "696:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:12",
                "type": ""
              }
            ],
            "src": "841:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1242:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1231:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1213:7:12",
                "type": ""
              }
            ],
            "src": "1176:77:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1314:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1331:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1354:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1336:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1324:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1309:3:12",
                "type": ""
              }
            ],
            "src": "1259:108:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1535:409:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1545:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1561:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1566:4:12",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1557:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:14:12"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "1549:4:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1581:176:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1628:43:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1658:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1665:4:12",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1654:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1654:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1648:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1648:23:12"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1632:12:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1718:12:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1736:3:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1741:4:12",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1732:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1732:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1684:33:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1684:63:12"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1684:63:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1767:170:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1808:43:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1838:5:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1845:4:12",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1834:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1834:16:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1828:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:23:12"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "1812:12:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "1898:12:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1916:3:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1921:4:12",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1912:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1912:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1864:33:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:63:12"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1864:63:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Vault_$1242_memory_ptr_to_t_struct$_Vault_$1242_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1522:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1529:3:12",
                "type": ""
              }
            ],
            "src": "1423:521:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2094:170:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2104:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2116:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2127:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2112:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2112:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2104:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2230:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2243:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2239:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2239:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Vault_$1242_memory_ptr_to_t_struct$_Vault_$1242_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2140:89:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2140:117:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2140:117:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Vault_$1242_memory_ptr__to_t_struct$_Vault_$1242_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2066:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2078:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2089:4:12",
                "type": ""
              }
            ],
            "src": "1950:314:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2313:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2370:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2379:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2382:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2372:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2372:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2372:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2336:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2361:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2343:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2343:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2333:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2333:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2326:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2326:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2323:63:12"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2306:5:12",
                "type": ""
              }
            ],
            "src": "2270:122:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2450:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2460:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2482:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2469:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2460:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2525:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2498:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2498:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2498:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2428:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2436:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2444:5:12",
                "type": ""
              }
            ],
            "src": "2398:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2609:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2655:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2657:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2657:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2657:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2630:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2639:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2626:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2626:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2622:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2622:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2619:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2748:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2763:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2777:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2767:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2792:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2827:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2838:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2823:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2823:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2847:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2802:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2802:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2792:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2579:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2590:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2602:6:12",
                "type": ""
              }
            ],
            "src": "2543:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2943:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2960:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2983:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2965:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2965:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2953:37:12"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2931:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2938:3:12",
                "type": ""
              }
            ],
            "src": "2878:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3100:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3110:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3122:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3133:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3118:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3110:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3190:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3203:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3214:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3199:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3199:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3146:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3146:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3072:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3084:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3095:4:12",
                "type": ""
              }
            ],
            "src": "3002:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3295:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3312:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3335:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3317:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3317:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3305:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3305:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3305:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3283:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3290:3:12",
                "type": ""
              }
            ],
            "src": "3230:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3452:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3462:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3474:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3485:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3470:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3470:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3462:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3542:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3555:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3566:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3551:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3551:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3498:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3498:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3498:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3424:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3436:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3447:4:12",
                "type": ""
              }
            ],
            "src": "3354:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3614:28:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3624:12:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3631:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3624:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3600:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3610:3:12",
                "type": ""
              }
            ],
            "src": "3582:60:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3708:82:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3718:66:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3776:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3758:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3758:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "3749:8:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:34:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3731:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3731:53:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3718:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3688:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3698:9:12",
                "type": ""
              }
            ],
            "src": "3648:142:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3856:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3866:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3910:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3879:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3866:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3836:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3846:9:12",
                "type": ""
              }
            ],
            "src": "3796:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4011:66:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4021:50:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4065:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4034:30:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4034:37:12"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "4021:9:12"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_StableCoinToken_$871_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3991:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "4001:9:12",
                "type": ""
              }
            ],
            "src": "3928:149:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4171:89:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4188:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4247:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_StableCoinToken_$871_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4193:53:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4193:60:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4181:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:73:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4181:73:12"
                }
              ]
            },
            "name": "abi_encode_t_contract$_StableCoinToken_$871_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4159:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4166:3:12",
                "type": ""
              }
            ],
            "src": "4083:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4387:147:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4397:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4409:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4420:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4405:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4405:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4397:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4500:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4513:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4524:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4509:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4509:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_StableCoinToken_$871_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4433:66:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4433:94:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4433:94:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_StableCoinToken_$871__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4359:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4371:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4382:4:12",
                "type": ""
              }
            ],
            "src": "4266:268:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4568:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4585:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4588:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4578:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4578:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4578:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4682:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4685:4:12",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4675:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4675:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4675:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4706:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4709:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4699:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4699:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4699:15:12"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4540:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4774:300:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4784:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4807:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4789:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4789:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4784:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4818:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4841:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4823:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4823:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4818:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5016:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5018:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5018:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5018:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4928:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4921:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4921:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4914:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4914:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4936:1:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4943:66:12",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5011:1:12"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4939:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4939:74:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4933:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4933:81:12"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4910:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4910:105:12"
                  },
                  "nodeType": "YulIf",
                  "src": "4907:131:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5048:20:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5063:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5066:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5059:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5059:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "5048:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4757:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4760:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4766:7:12",
                "type": ""
              }
            ],
            "src": "4726:348:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5176:73:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5193:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5198:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5186:19:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5214:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5233:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5238:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5229:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5229:14:12"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5214:11:12"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5148:3:12",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5153:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5164:11:12",
                "type": ""
              }
            ],
            "src": "5080:169:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5361:67:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5383:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5391:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5379:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:14:12"
                      },
                      {
                        "hexValue": "7769746864726177206c696d6974206578636565646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5395:25:12",
                        "type": "",
                        "value": "withdraw limit exceeded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:49:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:49:12"
                }
              ]
            },
            "name": "store_literal_in_memory_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5353:6:12",
                "type": ""
              }
            ],
            "src": "5255:173:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5580:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5590:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5656:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5661:2:12",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5597:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5597:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5590:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5762:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529",
                      "nodeType": "YulIdentifier",
                      "src": "5673:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5673:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5673:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5775:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5786:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5791:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5782:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5782:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5775:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5568:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5576:3:12",
                "type": ""
              }
            ],
            "src": "5434:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5977:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5987:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5999:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6010:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5995:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5995:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5987:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6034:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6045:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6030:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6030:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6053:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6059:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6049:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6049:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6023:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6023:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6023:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6079:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6213:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6087:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6087:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6079:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5957:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5972:4:12",
                "type": ""
              }
            ],
            "src": "5806:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6294:80:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6304:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6319:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6313:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6313:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6304:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6362:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6335:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6335:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6335:33:12"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6272:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6280:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6288:5:12",
                "type": ""
              }
            ],
            "src": "6231:143:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6457:274:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6503:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6505:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6505:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6505:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6478:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6487:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6474:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6474:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6499:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6470:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6470:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "6467:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6596:128:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6611:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6615:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6640:74:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6686:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6697:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6682:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6682:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6706:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "6650:31:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6650:64:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6640:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6427:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6438:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6450:6:12",
                "type": ""
              }
            ],
            "src": "6380:351:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6843:72:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6865:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6873:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6861:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6861:14:12"
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820746f6b656e7320696e2062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6877:30:12",
                        "type": "",
                        "value": "not enough tokens in balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6854:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6854:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6854:54:12"
                }
              ]
            },
            "name": "store_literal_in_memory_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6835:6:12",
                "type": ""
              }
            ],
            "src": "6737:178:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7067:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7077:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7143:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7148:2:12",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7084:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7077:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7249:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f",
                      "nodeType": "YulIdentifier",
                      "src": "7160:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7160:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7160:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7262:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7273:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7278:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7269:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7269:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7262:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7055:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7063:3:12",
                "type": ""
              }
            ],
            "src": "6921:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7464:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7474:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7486:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7497:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7482:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7474:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7521:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7532:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7517:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7517:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7540:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7546:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7536:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7536:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7510:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7510:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7510:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7566:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7700:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7574:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7566:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7444:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7459:4:12",
                "type": ""
              }
            ],
            "src": "7293:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7746:152:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7763:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7766:77:12",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7756:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7756:88:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7756:88:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7860:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7863:4:12",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7853:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7853:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7853:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7884:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7887:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7877:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7877:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7877:15:12"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "7718:180:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7946:143:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7956:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7979:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7961:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7961:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7956:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7990:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8013:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7995:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7995:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7990:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8037:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "8039:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8039:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8039:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8034:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8027:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8027:9:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8024:35:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8069:14:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8078:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8081:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "8074:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "8069:1:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7935:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7938:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7944:1:12",
                "type": ""
              }
            ],
            "src": "7904:185:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8221:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8231:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8243:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8254:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8239:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8239:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8231:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8311:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8324:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8335:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8320:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8320:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8267:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8267:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8267:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8392:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8405:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8416:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8401:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8401:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8348:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8348:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8348:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8185:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8197:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8205:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8216:4:12",
                "type": ""
              }
            ],
            "src": "8095:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8475:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8485:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8510:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8503:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8503:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8496:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8496:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8485:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8457:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8467:7:12",
                "type": ""
              }
            ],
            "src": "8433:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8569:76:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8623:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8632:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8635:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8625:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8625:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8625:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8592:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8614:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8599:14:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8599:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8589:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8589:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8582:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8582:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8579:60:12"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8562:5:12",
                "type": ""
              }
            ],
            "src": "8529:116:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8711:77:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8721:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8736:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8730:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8730:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8721:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8776:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8752:23:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8752:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8752:30:12"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8689:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8697:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8705:5:12",
                "type": ""
              }
            ],
            "src": "8651:137:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8868:271:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8914:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "8916:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8916:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8916:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8889:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8898:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8885:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8885:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8910:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8881:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8881:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "8878:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9007:125:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9022:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9036:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9026:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9051:71:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9094:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9105:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9090:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9090:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9114:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9061:28:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9061:61:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9051:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8838:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8849:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8861:6:12",
                "type": ""
              }
            ],
            "src": "8794:345:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9190:146:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9200:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9223:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9205:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9205:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9200:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9234:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9257:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9239:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9239:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9234:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9281:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9283:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9283:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9283:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9275:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9278:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9272:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9272:8:12"
                  },
                  "nodeType": "YulIf",
                  "src": "9269:34:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9313:17:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9325:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9328:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9321:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9321:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9313:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9176:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9179:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9185:4:12",
                "type": ""
              }
            ],
            "src": "9145:191:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9468:206:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9478:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9490:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9501:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9486:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9486:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9478:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9558:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9571:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9582:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9567:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9567:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9514:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9514:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9514:71:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9639:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9652:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9663:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9648:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9648:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9595:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9595:72:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9595:72:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9432:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9444:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9452:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9463:4:12",
                "type": ""
              }
            ],
            "src": "9342:332:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9786:76:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9808:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9816:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9804:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9804:14:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9820:34:12",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9797:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9797:58:12"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9778:6:12",
                "type": ""
              }
            ],
            "src": "9680:182:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10014:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10090:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10095:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10031:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10031:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10024:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10196:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "10107:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10107:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10107:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10209:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10220:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10225:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10216:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10216:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10209:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10002:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10010:3:12",
                "type": ""
              }
            ],
            "src": "9868:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10411:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10421:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10433:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10444:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10429:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10429:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10421:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10468:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10479:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10464:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10464:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10487:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10493:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10483:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10483:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10457:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10457:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10457:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10513:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10647:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10521:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10521:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10513:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10391:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10406:4:12",
                "type": ""
              }
            ],
            "src": "10240:419:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10709:261:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10719:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10742:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10724:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10724:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10719:1:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10753:25:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10776:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10758:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10758:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10753:1:12"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10916:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10918:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10918:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10918:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10837:1:12"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10844:66:12",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "10912:1:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10840:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10840:74:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10834:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10834:81:12"
                  },
                  "nodeType": "YulIf",
                  "src": "10831:107:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10948:16:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10959:1:12"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10962:1:12"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10955:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10955:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "10948:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10696:1:12",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10699:1:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "10705:3:12",
                "type": ""
              }
            ],
            "src": "10665:305:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11020:32:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11030:16:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11041:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "11030:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11002:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "11012:7:12",
                "type": ""
              }
            ],
            "src": "10976:76:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11100:78:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11156:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11165:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11168:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11158:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11158:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11158:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11123:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11147:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "11130:16:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11130:23:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11120:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11120:34:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11113:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11113:42:12"
                  },
                  "nodeType": "YulIf",
                  "src": "11110:62:12"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11093:5:12",
                "type": ""
              }
            ],
            "src": "11058:120:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11246:79:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11256:22:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11271:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11265:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11265:13:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11256:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11313:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "11287:25:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11287:32:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11287:32:12"
                }
              ]
            },
            "name": "abi_decode_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11224:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11232:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11240:5:12",
                "type": ""
              }
            ],
            "src": "11184:141:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11407:273:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11453:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "11455:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11455:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11455:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11428:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11437:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11424:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11424:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11449:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11420:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11420:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "11417:119:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11546:127:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11561:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11575:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "11565:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11590:73:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11635:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "11646:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11631:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11631:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11655:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "11600:30:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11600:63:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "11590:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11377:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11388:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11400:6:12",
                "type": ""
              }
            ],
            "src": "11331:349:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11792:119:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11814:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11822:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11810:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11810:14:12"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11826:34:12",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11803:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11803:58:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11803:58:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11882:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11890:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11878:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11878:15:12"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11895:8:12",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11871:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11871:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11871:33:12"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11784:6:12",
                "type": ""
              }
            ],
            "src": "11686:225:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12063:220:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12073:74:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12139:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12144:2:12",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12080:58:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12080:67:12"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12073:3:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12245:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "12156:88:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12156:93:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12156:93:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12258:19:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12269:3:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12274:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12265:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12265:12:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12258:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12051:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12059:3:12",
                "type": ""
              }
            ],
            "src": "11917:366:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12460:248:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12470:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12482:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12478:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12478:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12470:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12517:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12528:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12513:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12513:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12536:4:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12542:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12532:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12532:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12506:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12506:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12506:47:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12562:139:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12696:4:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12570:124:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12570:131:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12562:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12440:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12455:4:12",
                "type": ""
              }
            ],
            "src": "12289:419:12"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct IVault.Vault -> struct IVault.Vault\n    function abi_encode_t_struct$_Vault_$1242_memory_ptr_to_t_struct$_Vault_$1242_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // collateralAmount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // debtAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Vault_$1242_memory_ptr__to_t_struct$_Vault_$1242_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_Vault_$1242_memory_ptr_to_t_struct$_Vault_$1242_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_StableCoinToken_$871_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_StableCoinToken_$871_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_StableCoinToken_$871_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_StableCoinToken_$871__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_StableCoinToken_$871_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529(memPtr) {\n\n        mstore(add(memPtr, 0), \"withdraw limit exceeded\")\n\n    }\n\n    function abi_encode_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f(memPtr) {\n\n        mstore(add(memPtr, 0), \"not enough tokens in balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "260:3425:8:-:0;;;446:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;524:6:8;516:5;;:14;;;;;;;;;;;;;;;;;;549:7;540:6;;:16;;;;;;;;;;;;;;;;;;446:117;;260:3425;;587:96:4;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:119::-;628:7;657:24;675:5;657:24;:::i;:::-;646:35;;568:119;;;:::o;693:168::-;789:47;830:5;789:47;:::i;:::-;782:5;779:58;769:86;;851:1;848;841:12;769:86;693:168;:::o;867:189::-;947:5;978:6;972:13;963:22;;994:56;1044:5;994:56;:::i;:::-;867:189;;;;:::o;1062:119::-;1122:7;1151:24;1169:5;1151:24;:::i;:::-;1140:35;;1062:119;;;:::o;1187:168::-;1283:47;1324:5;1283:47;:::i;:::-;1276:5;1273:58;1263:86;;1345:1;1342;1335:12;1263:86;1187:168;:::o;1361:189::-;1441:5;1472:6;1466:13;1457:22;;1488:56;1538:5;1488:56;:::i;:::-;1361:189;;;;:::o;1556:599::-;1681:6;1689;1738:2;1726:9;1717:7;1713:23;1709:32;1706:119;;;1744:79;;:::i;:::-;1706:119;1864:1;1889:87;1968:7;1959:6;1948:9;1944:22;1889:87;:::i;:::-;1879:97;;1835:151;2025:2;2051:87;2130:7;2121:6;2110:9;2106:22;2051:87;:::i;:::-;2041:97;;1996:152;1556:599;;;;;:::o;260:3425:8:-;;;;;;;",
  "deployedSourceMap": "260:3425:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2190:133;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3070:160;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3389:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1411:617;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2629:175;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;;;;;;;;;;;:::i;:::-;;3484:103:8;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3593:90;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;973:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:360:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3236:147;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;340:28:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:133;2260:18;;:::i;:::-;2297:6;:19;2304:11;2297:19;;;;;;;;;;;;;;;2290:26;;;;;;;;;;;;;;;;;;;;;;;;;;;2190:133;;;:::o;3070:160::-;3153:19;3207:16;:14;:16::i;:::-;3191:13;:32;;;;:::i;:::-;3184:39;;3070:160;;;:::o;3389:89::-;3432:7;3465:5;;;;;;;;;;;3450:21;;3389:89;:::o;1411:617::-;1509:6;:18;1516:10;1509:18;;;;;;;;;;;;;;;:29;;;1490:15;:48;;1482:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;1616:15;1585:5;;;;;;;;;;;:15;;;1601:10;1585:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;1577:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1674:24;1719:16;:14;:16::i;:::-;1701:15;:34;;;;:::i;:::-;1674:61;;1745:5;;;;;;;;;;;:10;;;1756;1768:15;1745:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1833:16;1794:6;:18;1801:10;1794:18;;;;;;;;;;;;;;;:35;;;:55;;;;;;;:::i;:::-;;;;;;;;1892:15;1859:6;:18;1866:10;1859:18;;;;;;;;;;;;;;;:29;;;:48;;;;;;;:::i;:::-;;;;;;;;1925:10;1917:28;;:46;1946:16;1917:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:43;1987:16;2005:15;1978:43;;;;;;;:::i;:::-;;;;;;;;1472:556;1411:617;:::o;2629:175::-;2720:24;2781:16;:14;:16::i;:::-;2763:15;:34;;;;:::i;:::-;2756:41;;2629:175;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3484:103:8:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3572:7:8::1;3547:6;;:33;;;;;;;;;;;;;;;;;;3484:103:::0;:::o;3593:90::-;3635:7;3669:6;;;;;;;;;;;3654:22;;3593:90;:::o;973:85:0:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;760:360:8:-;838:20;879:16;:14;:16::i;:::-;861:15;:34;;;;:::i;:::-;838:57;;905:5;;;;;;;;;;;:10;;;916;928:12;905:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;990:15;951:6;:18;958:10;951:18;;;;;;;;;;;;;;;:35;;;:54;;;;;;;:::i;:::-;;;;;;;;1048:12;1015:6;:18;1022:10;1015:18;;;;;;;;;;;;;;;:29;;;:45;;;;;;;:::i;:::-;;;;;;;;1075:38;1083:15;1100:12;1075:38;;;;;;;:::i;:::-;;;;;;;;828:292;760:360;:::o;3236:147::-;3283:7;3301:11;3320:6;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3301:43;;3369:6;3361;:15;;;;:::i;:::-;3354:22;;;3236:147;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;::::0;1926:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;340:28:8:-;;;;;;;;;;;;;:::o;587:96:4:-;640:7;666:10;659:17;;587:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:108::-;1336:24;1354:5;1336:24;:::i;:::-;1331:3;1324:37;1259:108;;:::o;1423:521::-;1566:4;1561:3;1557:14;1665:4;1658:5;1654:16;1648:23;1684:63;1741:4;1736:3;1732:14;1718:12;1684:63;:::i;:::-;1581:176;1845:4;1838:5;1834:16;1828:23;1864:63;1921:4;1916:3;1912:14;1898:12;1864:63;:::i;:::-;1767:170;1535:409;1423:521;;:::o;1950:314::-;2089:4;2127:2;2116:9;2112:18;2104:26;;2140:117;2254:1;2243:9;2239:17;2230:6;2140:117;:::i;:::-;1950:314;;;;:::o;2270:122::-;2343:24;2361:5;2343:24;:::i;:::-;2336:5;2333:35;2323:63;;2382:1;2379;2372:12;2323:63;2270:122;:::o;2398:139::-;2444:5;2482:6;2469:20;2460:29;;2498:33;2525:5;2498:33;:::i;:::-;2398:139;;;;:::o;2543:329::-;2602:6;2651:2;2639:9;2630:7;2626:23;2622:32;2619:119;;;2657:79;;:::i;:::-;2619:119;2777:1;2802:53;2847:7;2838:6;2827:9;2823:22;2802:53;:::i;:::-;2792:63;;2748:117;2543:329;;;;:::o;2878:118::-;2965:24;2983:5;2965:24;:::i;:::-;2960:3;2953:37;2878:118;;:::o;3002:222::-;3095:4;3133:2;3122:9;3118:18;3110:26;;3146:71;3214:1;3203:9;3199:17;3190:6;3146:71;:::i;:::-;3002:222;;;;:::o;3230:118::-;3317:24;3335:5;3317:24;:::i;:::-;3312:3;3305:37;3230:118;;:::o;3354:222::-;3447:4;3485:2;3474:9;3470:18;3462:26;;3498:71;3566:1;3555:9;3551:17;3542:6;3498:71;:::i;:::-;3354:222;;;;:::o;3582:60::-;3610:3;3631:5;3624:12;;3582:60;;;:::o;3648:142::-;3698:9;3731:53;3749:34;3758:24;3776:5;3758:24;:::i;:::-;3749:34;:::i;:::-;3731:53;:::i;:::-;3718:66;;3648:142;;;:::o;3796:126::-;3846:9;3879:37;3910:5;3879:37;:::i;:::-;3866:50;;3796:126;;;:::o;3928:149::-;4001:9;4034:37;4065:5;4034:37;:::i;:::-;4021:50;;3928:149;;;:::o;4083:177::-;4193:60;4247:5;4193:60;:::i;:::-;4188:3;4181:73;4083:177;;:::o;4266:268::-;4382:4;4420:2;4409:9;4405:18;4397:26;;4433:94;4524:1;4513:9;4509:17;4500:6;4433:94;:::i;:::-;4266:268;;;;:::o;4540:180::-;4588:77;4585:1;4578:88;4685:4;4682:1;4675:15;4709:4;4706:1;4699:15;4726:348;4766:7;4789:20;4807:1;4789:20;:::i;:::-;4784:25;;4823:20;4841:1;4823:20;:::i;:::-;4818:25;;5011:1;4943:66;4939:74;4936:1;4933:81;4928:1;4921:9;4914:17;4910:105;4907:131;;;5018:18;;:::i;:::-;4907:131;5066:1;5063;5059:9;5048:20;;4726:348;;;;:::o;5080:169::-;5164:11;5198:6;5193:3;5186:19;5238:4;5233:3;5229:14;5214:29;;5080:169;;;;:::o;5255:173::-;5395:25;5391:1;5383:6;5379:14;5372:49;5255:173;:::o;5434:366::-;5576:3;5597:67;5661:2;5656:3;5597:67;:::i;:::-;5590:74;;5673:93;5762:3;5673:93;:::i;:::-;5791:2;5786:3;5782:12;5775:19;;5434:366;;;:::o;5806:419::-;5972:4;6010:2;5999:9;5995:18;5987:26;;6059:9;6053:4;6049:20;6045:1;6034:9;6030:17;6023:47;6087:131;6213:4;6087:131;:::i;:::-;6079:139;;5806:419;;;:::o;6231:143::-;6288:5;6319:6;6313:13;6304:22;;6335:33;6362:5;6335:33;:::i;:::-;6231:143;;;;:::o;6380:351::-;6450:6;6499:2;6487:9;6478:7;6474:23;6470:32;6467:119;;;6505:79;;:::i;:::-;6467:119;6625:1;6650:64;6706:7;6697:6;6686:9;6682:22;6650:64;:::i;:::-;6640:74;;6596:128;6380:351;;;;:::o;6737:178::-;6877:30;6873:1;6865:6;6861:14;6854:54;6737:178;:::o;6921:366::-;7063:3;7084:67;7148:2;7143:3;7084:67;:::i;:::-;7077:74;;7160:93;7249:3;7160:93;:::i;:::-;7278:2;7273:3;7269:12;7262:19;;6921:366;;;:::o;7293:419::-;7459:4;7497:2;7486:9;7482:18;7474:26;;7546:9;7540:4;7536:20;7532:1;7521:9;7517:17;7510:47;7574:131;7700:4;7574:131;:::i;:::-;7566:139;;7293:419;;;:::o;7718:180::-;7766:77;7763:1;7756:88;7863:4;7860:1;7853:15;7887:4;7884:1;7877:15;7904:185;7944:1;7961:20;7979:1;7961:20;:::i;:::-;7956:25;;7995:20;8013:1;7995:20;:::i;:::-;7990:25;;8034:1;8024:35;;8039:18;;:::i;:::-;8024:35;8081:1;8078;8074:9;8069:14;;7904:185;;;;:::o;8095:332::-;8216:4;8254:2;8243:9;8239:18;8231:26;;8267:71;8335:1;8324:9;8320:17;8311:6;8267:71;:::i;:::-;8348:72;8416:2;8405:9;8401:18;8392:6;8348:72;:::i;:::-;8095:332;;;;;:::o;8433:90::-;8467:7;8510:5;8503:13;8496:21;8485:32;;8433:90;;;:::o;8529:116::-;8599:21;8614:5;8599:21;:::i;:::-;8592:5;8589:32;8579:60;;8635:1;8632;8625:12;8579:60;8529:116;:::o;8651:137::-;8705:5;8736:6;8730:13;8721:22;;8752:30;8776:5;8752:30;:::i;:::-;8651:137;;;;:::o;8794:345::-;8861:6;8910:2;8898:9;8889:7;8885:23;8881:32;8878:119;;;8916:79;;:::i;:::-;8878:119;9036:1;9061:61;9114:7;9105:6;9094:9;9090:22;9061:61;:::i;:::-;9051:71;;9007:125;8794:345;;;;:::o;9145:191::-;9185:4;9205:20;9223:1;9205:20;:::i;:::-;9200:25;;9239:20;9257:1;9239:20;:::i;:::-;9234:25;;9278:1;9275;9272:8;9269:34;;;9283:18;;:::i;:::-;9269:34;9328:1;9325;9321:9;9313:17;;9145:191;;;;:::o;9342:332::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9595:72;9663:2;9652:9;9648:18;9639:6;9595:72;:::i;:::-;9342:332;;;;;:::o;9680:182::-;9820:34;9816:1;9808:6;9804:14;9797:58;9680:182;:::o;9868:366::-;10010:3;10031:67;10095:2;10090:3;10031:67;:::i;:::-;10024:74;;10107:93;10196:3;10107:93;:::i;:::-;10225:2;10220:3;10216:12;10209:19;;9868:366;;;:::o;10240:419::-;10406:4;10444:2;10433:9;10429:18;10421:26;;10493:9;10487:4;10483:20;10479:1;10468:9;10464:17;10457:47;10521:131;10647:4;10521:131;:::i;:::-;10513:139;;10240:419;;;:::o;10665:305::-;10705:3;10724:20;10742:1;10724:20;:::i;:::-;10719:25;;10758:20;10776:1;10758:20;:::i;:::-;10753:25;;10912:1;10844:66;10840:74;10837:1;10834:81;10831:107;;;10918:18;;:::i;:::-;10831:107;10962:1;10959;10955:9;10948:16;;10665:305;;;;:::o;10976:76::-;11012:7;11041:5;11030:16;;10976:76;;;:::o;11058:120::-;11130:23;11147:5;11130:23;:::i;:::-;11123:5;11120:34;11110:62;;11168:1;11165;11158:12;11110:62;11058:120;:::o;11184:141::-;11240:5;11271:6;11265:13;11256:22;;11287:32;11313:5;11287:32;:::i;:::-;11184:141;;;;:::o;11331:349::-;11400:6;11449:2;11437:9;11428:7;11424:23;11420:32;11417:119;;;11455:79;;:::i;:::-;11417:119;11575:1;11600:63;11655:7;11646:6;11635:9;11631:22;11600:63;:::i;:::-;11590:73;;11546:127;11331:349;;;;:::o;11686:225::-;11826:34;11822:1;11814:6;11810:14;11803:58;11895:8;11890:2;11882:6;11878:15;11871:33;11686:225;:::o;11917:366::-;12059:3;12080:67;12144:2;12139:3;12080:67;:::i;:::-;12073:74;;12156:93;12245:3;12156:93;:::i;:::-;12274:2;12269:3;12265:12;12258:19;;11917:366;;;:::o;12289:419::-;12455:4;12493:2;12482:9;12478:18;12470:26;;12542:9;12536:4;12532:20;12528:1;12517:9;12513:17;12506:47;12570:131;12696:4;12570:131;:::i;:::-;12562:139;;12289:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IVault.sol\";\nimport \"./Coin.sol\";\nimport \"./PriceConsumerV3.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Vault is IVault, Ownable {\n\n    mapping (address => Vault) vaults;\n    StableCoinToken public token;\n    PriceConsumerV3 private oracle;\n    // using SafeMath for uint256;\n\n    constructor(StableCoinToken _token, PriceConsumerV3 _oracle){\n        token = _token;\n        oracle = _oracle;\n    }\n\n    /**\n    @notice Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\n    @param amountToDeposit  The amount of ether the user sent in the transaction\n     */\n    function deposit(uint256 amountToDeposit) override payable external {\n        uint256 amountToMint = amountToDeposit * getEthUSDPrice();\n        token.mint(msg.sender, amountToMint);\n        vaults[msg.sender].collateralAmount += amountToDeposit;\n        vaults[msg.sender].debtAmount += amountToMint;\n        emit Deposit(amountToDeposit, amountToMint);\n    }\n    \n    /**\n    @notice Allows a user to withdraw up to 100% of the collateral they have on deposit\n    @dev This cannot allow a user to withdraw more than they put in\n    @param repaymentAmount  the amount of stablecoin that a user is repaying to redeem their collateral for.\n     */\n    function withdraw(uint256 repaymentAmount) override external {\n        require(repaymentAmount <= vaults[msg.sender].debtAmount, \"withdraw limit exceeded\"); \n        require(token.balanceOf(msg.sender) >= repaymentAmount, \"not enough tokens in balance\");\n        uint256 amountToWithdraw = repaymentAmount / getEthUSDPrice();\n        token.burn(msg.sender, repaymentAmount);\n        vaults[msg.sender].collateralAmount -= amountToWithdraw;\n        vaults[msg.sender].debtAmount -= repaymentAmount;\n        payable(msg.sender).transfer(amountToWithdraw);\n        emit Withdraw(amountToWithdraw, repaymentAmount);\n    }\n\n    \n    /**\n    @notice Returns the details of a vault\n    @param userAddress  the address of the vault owner\n    @return vault  the vault details\n     */\n    function getVault(address userAddress) external view override returns(Vault memory vault) {\n        return vaults[userAddress];\n    }\n    \n    /**\n    @notice Returns an estimate of how much collateral could be withdrawn for a given amount of stablecoin\n    @param repaymentAmount  the amount of stable coin that would be repaid\n    @return collateralAmount the estimated amount of a vault's collateral that would be returned \n     */\n    function estimateCollateralAmount(uint256 repaymentAmount) external view override  returns(uint256 collateralAmount) {\n        return repaymentAmount / getEthUSDPrice();\n    }\n    \n    /**\n    @notice Returns an estimate on how much stable coin could be minted at the current rate\n    @param depositAmount the amount of ETH that would be deposited\n    @return tokenAmount  the estimated amount of stablecoin that would be minted\n     */\n    function estimateTokenAmount(uint256 depositAmount) external view override returns(uint256 tokenAmount) {\n        return depositAmount * getEthUSDPrice();\n    }\n\n    function getEthUSDPrice() public view returns (uint256){\n        uint price8 = uint(oracle.getLatestPrice());\n        return price8*(10**10);\n    }\n\n    function getToken() external view returns (address){\n        return address(token);\n    }\n\n    function setOracle(address _oracle) public onlyOwner {\n        oracle = PriceConsumerV3(_oracle);\n    }\n\n    function getOracle() public view returns (address) {\n        return address(oracle);\n    }\n}\n",
  "sourcePath": "/Users/syed/Desktop/poli/lending_dapp/contracts/implementations/Vault.sol",
  "ast": {
    "absolutePath": "project:/contracts/implementations/Vault.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        1212
      ],
      "Context": [
        774
      ],
      "ERC20": [
        649
      ],
      "ICoin": [
        1235
      ],
      "IERC20": [
        727
      ],
      "IERC20Metadata": [
        752
      ],
      "IVault": [
        1292
      ],
      "Ownable": [
        103
      ],
      "PriceConsumerV3": [
        904
      ],
      "StableCoinToken": [
        871
      ],
      "Vault": [
        1166
      ]
    },
    "id": 1167,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 906,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:8"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IVault.sol",
        "file": "../interfaces/IVault.sol",
        "id": 907,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1167,
        "sourceUnit": 1293,
        "src": "57:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/Coin.sol",
        "file": "./Coin.sol",
        "id": 908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1167,
        "sourceUnit": 872,
        "src": "92:20:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/implementations/PriceConsumerV3.sol",
        "file": "./PriceConsumerV3.sol",
        "id": 909,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1167,
        "sourceUnit": 905,
        "src": "113:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 910,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1167,
        "sourceUnit": 104,
        "src": "145:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 911,
              "name": "IVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1292,
              "src": "278:6:8"
            },
            "id": 912,
            "nodeType": "InheritanceSpecifier",
            "src": "278:6:8"
          },
          {
            "baseName": {
              "id": 913,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 103,
              "src": "286:7:8"
            },
            "id": 914,
            "nodeType": "InheritanceSpecifier",
            "src": "286:7:8"
          }
        ],
        "canonicalName": "Vault",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1166,
        "linearizedBaseContracts": [
          1166,
          103,
          774,
          1292
        ],
        "name": "Vault",
        "nameLocation": "269:5:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "vaults",
            "nameLocation": "328:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1166,
            "src": "301:33:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
              "typeString": "mapping(address => struct IVault.Vault)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 915,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "310:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "301:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                "typeString": "mapping(address => struct IVault.Vault)"
              },
              "valueType": {
                "id": 917,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 916,
                  "name": "Vault",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1242,
                  "src": "321:5:8"
                },
                "referencedDeclaration": 1242,
                "src": "321:5:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vault_$1242_storage_ptr",
                  "typeString": "struct IVault.Vault"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 922,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "363:5:8",
            "nodeType": "VariableDeclaration",
            "scope": 1166,
            "src": "340:28:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StableCoinToken_$871",
              "typeString": "contract StableCoinToken"
            },
            "typeName": {
              "id": 921,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 920,
                "name": "StableCoinToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 871,
                "src": "340:15:8"
              },
              "referencedDeclaration": 871,
              "src": "340:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StableCoinToken_$871",
                "typeString": "contract StableCoinToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 925,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "398:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1166,
            "src": "374:30:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
              "typeString": "contract PriceConsumerV3"
            },
            "typeName": {
              "id": 924,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 923,
                "name": "PriceConsumerV3",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 904,
                "src": "374:15:8"
              },
              "referencedDeclaration": 904,
              "src": "374:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                "typeString": "contract PriceConsumerV3"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "506:57:8",
              "statements": [
                {
                  "expression": {
                    "id": 936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 934,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 922,
                      "src": "516:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$871",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 935,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 928,
                      "src": "524:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StableCoinToken_$871",
                        "typeString": "contract StableCoinToken"
                      }
                    },
                    "src": "516:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$871",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "id": 937,
                  "nodeType": "ExpressionStatement",
                  "src": "516:14:8"
                },
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 938,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "540:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                        "typeString": "contract PriceConsumerV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 939,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 931,
                      "src": "549:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                        "typeString": "contract PriceConsumerV3"
                      }
                    },
                    "src": "540:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                      "typeString": "contract PriceConsumerV3"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "540:16:8"
                }
              ]
            },
            "id": 943,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 928,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "474:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "458:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StableCoinToken_$871",
                    "typeString": "contract StableCoinToken"
                  },
                  "typeName": {
                    "id": 927,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 926,
                      "name": "StableCoinToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 871,
                      "src": "458:15:8"
                    },
                    "referencedDeclaration": 871,
                    "src": "458:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StableCoinToken_$871",
                      "typeString": "contract StableCoinToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 931,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "498:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "482:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                    "typeString": "contract PriceConsumerV3"
                  },
                  "typeName": {
                    "id": 930,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 929,
                      "name": "PriceConsumerV3",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 904,
                      "src": "482:15:8"
                    },
                    "referencedDeclaration": 904,
                    "src": "482:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                      "typeString": "contract PriceConsumerV3"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:49:8"
            },
            "returnParameters": {
              "id": 933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "506:0:8"
            },
            "scope": 1166,
            "src": "446:117:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1260
            ],
            "body": {
              "id": 986,
              "nodeType": "Block",
              "src": "828:292:8",
              "statements": [
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "amountToMint",
                      "nameLocation": "846:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 986,
                      "src": "838:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "838:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 956,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 952,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "861:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 953,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "879:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "879:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "861:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "838:57:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 960,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "916:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "916:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 962,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "928:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 957,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "905:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$871",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 850,
                      "src": "905:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 964,
                  "nodeType": "ExpressionStatement",
                  "src": "905:36:8"
                },
                {
                  "expression": {
                    "id": 971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 965,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "951:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 968,
                        "indexExpression": {
                          "expression": {
                            "id": 966,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "958:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "958:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "951:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1242_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "951:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 970,
                      "name": "amountToDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "990:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "951:54:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 972,
                  "nodeType": "ExpressionStatement",
                  "src": "951:54:8"
                },
                {
                  "expression": {
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 973,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1015:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 976,
                        "indexExpression": {
                          "expression": {
                            "id": 974,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1022:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1022:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1015:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1242_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 977,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1241,
                      "src": "1015:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 978,
                      "name": "amountToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "1048:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1015:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "1015:45:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 982,
                        "name": "amountToDeposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "1083:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 983,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "1100:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 981,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "1075:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1075:38:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "EmitStatement",
                  "src": "1070:43:8"
                }
              ]
            },
            "documentation": {
              "id": 944,
              "nodeType": "StructuredDocumentation",
              "src": "569:186:8",
              "text": "@notice Allows a user to deposit ETH collateral in exchange for some amount of stablecoin\n@param amountToDeposit  The amount of ether the user sent in the transaction"
            },
            "functionSelector": "b6b55f25",
            "id": 987,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "769:7:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 948,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "802:8:8"
            },
            "parameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "mutability": "mutable",
                  "name": "amountToDeposit",
                  "nameLocation": "785:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "777:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "776:25:8"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "828:0:8"
            },
            "scope": 1166,
            "src": "760:360:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1266
            ],
            "body": {
              "id": 1061,
              "nodeType": "Block",
              "src": "1472:556:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 995,
                          "name": "repaymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "1490:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 996,
                              "name": "vaults",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 919,
                              "src": "1509:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                                "typeString": "mapping(address => struct IVault.Vault storage ref)"
                              }
                            },
                            "id": 999,
                            "indexExpression": {
                              "expression": {
                                "id": 997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1516:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1516:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1509:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vault_$1242_storage",
                              "typeString": "struct IVault.Vault storage ref"
                            }
                          },
                          "id": 1000,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "debtAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1241,
                          "src": "1509:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1490:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7769746864726177206c696d6974206578636565646564",
                        "id": 1002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529",
                          "typeString": "literal_string \"withdraw limit exceeded\""
                        },
                        "value": "withdraw limit exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17dbb2d9dc794b5ffb8ebdaa3fa0f7337d949ca94928487a1cba201caca48529",
                          "typeString": "literal_string \"withdraw limit exceeded\""
                        }
                      ],
                      "id": 994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1482:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:84:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:84:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1008,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1601:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1601:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1006,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 922,
                              "src": "1585:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StableCoinToken_$871",
                                "typeString": "contract StableCoinToken"
                              }
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 202,
                            "src": "1585:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1585:27:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1011,
                          "name": "repaymentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 990,
                          "src": "1616:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1585:46:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420656e6f75676820746f6b656e7320696e2062616c616e6365",
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f",
                          "typeString": "literal_string \"not enough tokens in balance\""
                        },
                        "value": "not enough tokens in balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6bc69b65b09d9e6cfabd4e9bafb7fb994a65d7e96ff9a3596923fe7c042d882f",
                          "typeString": "literal_string \"not enough tokens in balance\""
                        }
                      ],
                      "id": 1005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1577:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:87:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:87:8"
                },
                {
                  "assignments": [
                    1017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "amountToWithdraw",
                      "nameLocation": "1682:16:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1061,
                      "src": "1674:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1674:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1022,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1018,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1701:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1019,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "1719:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1719:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1701:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1674:61:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1026,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1756:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1756:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1028,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "1768:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1023,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "1745:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$871",
                          "typeString": "contract StableCoinToken"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 870,
                      "src": "1745:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1030,
                  "nodeType": "ExpressionStatement",
                  "src": "1745:39:8"
                },
                {
                  "expression": {
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1031,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1794:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1034,
                        "indexExpression": {
                          "expression": {
                            "id": 1032,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1801:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1801:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1794:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1242_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateralAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1239,
                      "src": "1794:35:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1036,
                      "name": "amountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "1833:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1794:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:55:8"
                },
                {
                  "expression": {
                    "id": 1045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1039,
                          "name": "vaults",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 919,
                          "src": "1859:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                            "typeString": "mapping(address => struct IVault.Vault storage ref)"
                          }
                        },
                        "id": 1042,
                        "indexExpression": {
                          "expression": {
                            "id": 1040,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1866:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1866:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1859:18:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vault_$1242_storage",
                          "typeString": "struct IVault.Vault storage ref"
                        }
                      },
                      "id": 1043,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "debtAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1241,
                      "src": "1859:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1044,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 990,
                      "src": "1892:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1859:48:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1046,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:48:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1053,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1946:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1049,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1925:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1925:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1917:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1047,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1917:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1917:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1917:28:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:46:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:46:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1057,
                        "name": "amountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1987:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1058,
                        "name": "repaymentAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 990,
                        "src": "2005:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1056,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1254,
                      "src": "1978:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1978:43:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1060,
                  "nodeType": "EmitStatement",
                  "src": "1973:48:8"
                }
              ]
            },
            "documentation": {
              "id": 988,
              "nodeType": "StructuredDocumentation",
              "src": "1130:276:8",
              "text": "@notice Allows a user to withdraw up to 100% of the collateral they have on deposit\n@dev This cannot allow a user to withdraw more than they put in\n@param repaymentAmount  the amount of stablecoin that a user is repaying to redeem their collateral for."
            },
            "functionSelector": "2e1a7d4d",
            "id": 1062,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1420:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 992,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1454:8:8"
            },
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "mutability": "mutable",
                  "name": "repaymentAmount",
                  "nameLocation": "1437:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1062,
                  "src": "1429:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1429:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1428:25:8"
            },
            "returnParameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1472:0:8"
            },
            "scope": 1166,
            "src": "1411:617:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1275
            ],
            "body": {
              "id": 1076,
              "nodeType": "Block",
              "src": "2280:43:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1072,
                      "name": "vaults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 919,
                      "src": "2297:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vault_$1242_storage_$",
                        "typeString": "mapping(address => struct IVault.Vault storage ref)"
                      }
                    },
                    "id": 1074,
                    "indexExpression": {
                      "id": 1073,
                      "name": "userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "2304:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2297:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$1242_storage",
                      "typeString": "struct IVault.Vault storage ref"
                    }
                  },
                  "functionReturnParameters": 1071,
                  "id": 1075,
                  "nodeType": "Return",
                  "src": "2290:26:8"
                }
              ]
            },
            "documentation": {
              "id": 1063,
              "nodeType": "StructuredDocumentation",
              "src": "2039:146:8",
              "text": "@notice Returns the details of a vault\n@param userAddress  the address of the vault owner\n@return vault  the vault details"
            },
            "functionSelector": "0eb9af38",
            "id": 1077,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVault",
            "nameLocation": "2199:8:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1067,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2243:8:8"
            },
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "2216:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "2208:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:21:8"
            },
            "returnParameters": {
              "id": 1071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1070,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "2273:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1077,
                  "src": "2260:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Vault_$1242_memory_ptr",
                    "typeString": "struct IVault.Vault"
                  },
                  "typeName": {
                    "id": 1069,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1068,
                      "name": "Vault",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1242,
                      "src": "2260:5:8"
                    },
                    "referencedDeclaration": 1242,
                    "src": "2260:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vault_$1242_storage_ptr",
                      "typeString": "struct IVault.Vault"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2259:20:8"
            },
            "scope": 1166,
            "src": "2190:133:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1283
            ],
            "body": {
              "id": 1091,
              "nodeType": "Block",
              "src": "2746:58:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1086,
                      "name": "repaymentAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "2763:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1087,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "2781:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2781:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2763:34:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1085,
                  "id": 1090,
                  "nodeType": "Return",
                  "src": "2756:41:8"
                }
              ]
            },
            "documentation": {
              "id": 1078,
              "nodeType": "StructuredDocumentation",
              "src": "2333:291:8",
              "text": "@notice Returns an estimate of how much collateral could be withdrawn for a given amount of stablecoin\n@param repaymentAmount  the amount of stable coin that would be repaid\n@return collateralAmount the estimated amount of a vault's collateral that would be returned "
            },
            "functionSelector": "56bfdaf5",
            "id": 1092,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateCollateralAmount",
            "nameLocation": "2638:24:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1082,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2702:8:8"
            },
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "repaymentAmount",
                  "nameLocation": "2671:15:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1092,
                  "src": "2663:23:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2662:25:8"
            },
            "returnParameters": {
              "id": 1085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "2728:16:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1092,
                  "src": "2720:24:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2720:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2719:26:8"
            },
            "scope": 1166,
            "src": "2629:175:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1291
            ],
            "body": {
              "id": 1106,
              "nodeType": "Block",
              "src": "3174:56:8",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1101,
                      "name": "depositAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1095,
                      "src": "3191:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1102,
                        "name": "getEthUSDPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "3207:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3207:16:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3191:32:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1100,
                  "id": 1105,
                  "nodeType": "Return",
                  "src": "3184:39:8"
                }
              ]
            },
            "documentation": {
              "id": 1093,
              "nodeType": "StructuredDocumentation",
              "src": "2814:251:8",
              "text": "@notice Returns an estimate on how much stable coin could be minted at the current rate\n@param depositAmount the amount of ETH that would be deposited\n@return tokenAmount  the estimated amount of stablecoin that would be minted"
            },
            "functionSelector": "1b05ab79",
            "id": 1107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateTokenAmount",
            "nameLocation": "3079:19:8",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1097,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3136:8:8"
            },
            "parameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "depositAmount",
                  "nameLocation": "3107:13:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "3099:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3099:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3098:23:8"
            },
            "returnParameters": {
              "id": 1100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1099,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "3161:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "3153:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3153:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3152:21:8"
            },
            "scope": 1166,
            "src": "3070:160:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "3291:92:8",
              "statements": [
                {
                  "assignments": [
                    1113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1113,
                      "mutability": "mutable",
                      "name": "price8",
                      "nameLocation": "3306:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "3301:11:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1112,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3301:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1120,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 1116,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 925,
                            "src": "3320:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                              "typeString": "contract PriceConsumerV3"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getLatestPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 903,
                          "src": "3320:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                            "typeString": "function () view external returns (int256)"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3320:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 1115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3315:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1114,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3315:4:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3315:29:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3301:43:8"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1121,
                      "name": "price8",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1113,
                      "src": "3361:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "id": 1124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 1122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3369:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 1123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3373:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "3369:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          }
                        }
                      ],
                      "id": 1125,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3368:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "3361:15:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1111,
                  "id": 1127,
                  "nodeType": "Return",
                  "src": "3354:22:8"
                }
              ]
            },
            "functionSelector": "d84549d7",
            "id": 1129,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEthUSDPrice",
            "nameLocation": "3245:14:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3259:2:8"
            },
            "returnParameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "3283:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3283:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3282:9:8"
            },
            "scope": 1166,
            "src": "3236:147:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "3440:38:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1136,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 922,
                        "src": "3465:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StableCoinToken_$871",
                          "typeString": "contract StableCoinToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StableCoinToken_$871",
                          "typeString": "contract StableCoinToken"
                        }
                      ],
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3457:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1134,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3457:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:14:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1133,
                  "id": 1138,
                  "nodeType": "Return",
                  "src": "3450:21:8"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 1140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "3398:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3406:2:8"
            },
            "returnParameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "3432:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3431:9:8"
            },
            "scope": 1166,
            "src": "3389:89:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1153,
              "nodeType": "Block",
              "src": "3537:50:8",
              "statements": [
                {
                  "expression": {
                    "id": 1151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1147,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 925,
                      "src": "3547:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                        "typeString": "contract PriceConsumerV3"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1149,
                          "name": "_oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "3572:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1148,
                        "name": "PriceConsumerV3",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "3556:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PriceConsumerV3_$904_$",
                          "typeString": "type(contract PriceConsumerV3)"
                        }
                      },
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3556:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                        "typeString": "contract PriceConsumerV3"
                      }
                    },
                    "src": "3547:33:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                      "typeString": "contract PriceConsumerV3"
                    }
                  },
                  "id": 1152,
                  "nodeType": "ExpressionStatement",
                  "src": "3547:33:8"
                }
              ]
            },
            "functionSelector": "7adbf973",
            "id": 1154,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1145,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1144,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "3527:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3527:9:8"
              }
            ],
            "name": "setOracle",
            "nameLocation": "3493:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nameLocation": "3511:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1154,
                  "src": "3503:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:17:8"
            },
            "returnParameters": {
              "id": 1146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3537:0:8"
            },
            "scope": 1166,
            "src": "3484:103:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1164,
              "nodeType": "Block",
              "src": "3644:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1161,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 925,
                        "src": "3669:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                          "typeString": "contract PriceConsumerV3"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PriceConsumerV3_$904",
                          "typeString": "contract PriceConsumerV3"
                        }
                      ],
                      "id": 1160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3661:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1159,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3661:7:8",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:15:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1158,
                  "id": 1163,
                  "nodeType": "Return",
                  "src": "3654:22:8"
                }
              ]
            },
            "functionSelector": "833b1fce",
            "id": 1165,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracle",
            "nameLocation": "3602:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3611:2:8"
            },
            "returnParameters": {
              "id": 1158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1165,
                  "src": "3635:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:9:8"
            },
            "scope": 1166,
            "src": "3593:90:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1167,
        "src": "260:3425:8",
        "usedErrors": []
      }
    ],
    "src": "32:3654:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xdEF298dCB84CBFD0eb1931A507B2a70fE5e3D198",
      "transactionHash": "0x0e0928187d892f080cc104fd97fe0b6efa43cf820870a5c0ae7f14fe1a86fd04"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-02T05:54:06.952Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(uint256)": {
        "params": {
          "amountToDeposit": "The amount of ether the user sent in the transaction"
        }
      },
      "estimateCollateralAmount(uint256)": {
        "params": {
          "repaymentAmount": "the amount of stable coin that would be repaid"
        },
        "returns": {
          "collateralAmount": "the estimated amount of a vault's collateral that would be returned "
        }
      },
      "estimateTokenAmount(uint256)": {
        "params": {
          "depositAmount": "the amount of ETH that would be deposited"
        },
        "returns": {
          "tokenAmount": " the estimated amount of stablecoin that would be minted"
        }
      },
      "getVault(address)": {
        "params": {
          "userAddress": "the address of the vault owner"
        },
        "returns": {
          "vault": " the vault details"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "This cannot allow a user to withdraw more than they put in",
        "params": {
          "repaymentAmount": "the amount of stablecoin that a user is repaying to redeem their collateral for."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deposit(uint256)": {
        "notice": "Allows a user to deposit ETH collateral in exchange for some amount of stablecoin"
      },
      "estimateCollateralAmount(uint256)": {
        "notice": "Returns an estimate of how much collateral could be withdrawn for a given amount of stablecoin"
      },
      "estimateTokenAmount(uint256)": {
        "notice": "Returns an estimate on how much stable coin could be minted at the current rate"
      },
      "getVault(address)": {
        "notice": "Returns the details of a vault"
      },
      "withdraw(uint256)": {
        "notice": "Allows a user to withdraw up to 100% of the collateral they have on deposit"
      }
    },
    "version": 1
  }
}